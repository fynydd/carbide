@inherits Umbraco.Web.Mvc.UmbracoViewPage
@using System
@using System.Security.Cryptography
@using Umbraco.Web
@using Fynydd.Carbide
@using Bolide.Helpers

@{
    var umbCtx = DependencyResolver.Current.GetService<IUmbracoContextFactory>().EnsureUmbracoContext().UmbracoContext;

    object bolideInstanceId;
    Html.ViewData.TryGetValue("instanceId", out bolideInstanceId);
    var instanceId = bolideInstanceId == null ? "rich-content" : bolideInstanceId.ToString();

    Html.ViewData.Add(new KeyValuePair<string, object>("cssSelector", ".bolide_rich_content#" + instanceId));
    Html.RenderPartial("_Partial_CSS_Custom_Properties", Model, Html.ViewData);
    Html.ViewData.Clear();
}
<section id="@(instanceId)" class="bolide_rich_content" sf-unit>
    <div sf-outer-wrapper>
        <div sf-inner-wrapper>
            <div class="unit-content">
            @if (Model.SafeValue("headline").HasValue())
            {
                @Html.Raw("<" + Model.SafeValue("headlineStyle") + ">" + Model.SafeValue("headline").ProcessShortCodes(Model) + "</" + Model.SafeValue("headlineStyle") + ">")
            }
            @if (Model.SafeValue("richContent").HasValue())
            {
                @Html.Raw(Model.SafeValue("richContent").ProcessShortCodes(Model))
            }
            @if (Model.SafeValue("buttonText").HasValue())
            {
                <div class="button-row">
                    <a href="@(Model.HasValue("buttonLink") ? Model.PickerValue("buttonLink").Url : Model.SafeValue<string>("buttonUrl"))" role="button">@Html.Raw(Model.SafeValue("buttonText").ProcessShortCodes(Model))</a>
                </div>
            }
            </div>
        </div>
    </div>
</section>
