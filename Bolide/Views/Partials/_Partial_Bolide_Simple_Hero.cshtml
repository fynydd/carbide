@inherits Umbraco.Web.Mvc.UmbracoViewPage
@using System
@using System.Security.Cryptography
@using Umbraco.Web
@using Fynydd.Carbide

@{ 
    var umbCtx = DependencyResolver.Current.GetService<IUmbracoContextFactory>().EnsureUmbracoContext().UmbracoContext;

    object bolideSimpleHeroInstanceId;
    Html.ViewData.TryGetValue("BolideSimpleHeroInstanceId", out bolideSimpleHeroInstanceId);

    var heroId = bolideSimpleHeroInstanceId == null ? "hero-unit" : bolideSimpleHeroInstanceId.ToString();
    var uid = heroId.Replace("-", "").Replace("_", "");
}

<section id="@(heroId)" class="bolide_simple_hero" sf-unit>
    <div role="presentation" id="dimmer"></div>
    <div sf-outer-wrapper>
        <div sf-inner-wrapper>
            <div role="grid" style="--sf-centered: true;">
                <div role="gridcell" class="outer-gridcell">
                    <div id="hero-content">
                        <div role="presentation">
                            <div role="grid">
                                <div role="gridcell" class="inner-gridcell">
                                    @foreach(var frame in Model.SafeNestedValues("bolideSimpleHeroFrames").Where(f => f.SafeValue<bool>("bolideSimpleHeroEnabled")))
                                    {
                                    <div class="frame" data-img="@(frame.PickerValue("bolideSimpleHeroBackgroundImage").Url)?width=1920&quality=75" style="transition-duration: @(Model.SafeValue<float>("bolideSimpleHeroFrameTransitionTime")/1000)s;">
                                        <h1>@Html.Raw(frame.SafeValue("bolideSimpleHeroTitle"))</h1>
                                        <div class="excerpt-row">
                                            @Html.Raw(frame.SafeValue("bolideSimpleHeroExcerpt"))
                                        </div>
                                        @if(frame.HasValue("bolideSimpleHeroButtonText"))
                                        {
                                        <div class="button-row">
                                            <a href="@(frame.HasValue("bolideSimpleHeroButtonLink") ? frame.PickerValue("bolideSimpleHeroButtonLink").Url : frame.SafeValue<string>("bolideSimpleHeroButtonUrl"))" role="button">@Html.Raw(frame.SafeValue("bolideSimpleHeroButtonText"))</a>
                                        </div>
                                        }
                                    </div>
                                    }
                                </div>
                            </div>
                            <div class="nodes">
                            @foreach(var frame in Model.SafeNestedValues("bolideSimpleHeroFrames").Where(f => f.SafeValue<bool>("bolideSimpleHeroEnabled")))
                            {
                                <a></a>
                            }
                                <span></span>
                            </div>
                        </div>
                        <script>

                            $(document).ready(function () {

                                $("#@(heroId)").bolideSimpleHero({

                                    slideDuration: @(Model.SafeValue<int>("bolideSimpleHeroFrameDuration")),
                                    transitionTime: @(Model.SafeValue<int>("bolideSimpleHeroBgTransitionTime")),
                                    showCountdown: true
                                });
                            });

                        </script>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
