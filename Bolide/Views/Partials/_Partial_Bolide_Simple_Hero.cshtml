@inherits Umbraco.Web.Mvc.UmbracoViewPage
@using System.Security.Cryptography
@using Umbraco.Web
@using Fynydd.Carbide

@{ 
    var umbCtx = DependencyResolver.Current.GetService<IUmbracoContextFactory>().EnsureUmbracoContext().UmbracoContext;

    object bolideSimpleHeroInstanceId;
    Html.ViewData.TryGetValue("BolideSimpleHeroInstanceId", out bolideSimpleHeroInstanceId);

    var heroId = bolideSimpleHeroInstanceId == null ? "hero-unit" : bolideSimpleHeroInstanceId.ToString();
}

<!-- BackStetch -->
<script src="@Url.Content(umbCtx, "~/scripts/jquery.backstretch.min.js", addCacheBuster: true)"></script>

<section id="@(heroId)" class="bolide_simple_hero" sf-unit>
    <div role="presentation" id="dimmer"></div>
    <div sf-outer-wrapper>
        <div sf-inner-wrapper>
            <div role="grid" style="--sf-centered: true;">
                <div role="gridcell" class="outer-gridcell">
                    <div id="hero-content">
                        <div role="presentation">
                            <div role="grid">
                                <div role="gridcell" class="inner-gridcell">
                                    @foreach(var frame in Model.SafeNestedValues("bolideSimpleHeroFrames").Where(f => f.SafeValue<bool>("bolideSimpleHeroEnabled")))
                                    {
                                    <div class="frame" data-img="@(frame.PickerValue("bolideSimpleHeroBackgroundImage").Url)?width=1920&quality=75">
                                        <h1>@Html.Raw(frame.SafeValue("bolideSimpleHeroTitle"))</h1>
                                        <div class="excerpt-row">
                                            @Html.Raw(frame.SafeValue("bolideSimpleHeroExcerpt"))
                                        </div>
                                        <div class="button-row">
                                            <a href="@(frame.HasValue("bolideSimpleHeroButtonLink") ? frame.PickerValue("bolideSimpleHeroButtonLink").Url : frame.SafeValue<string>("bolideSimpleHeroButtonUrl"))" role="button">@Html.Raw(frame.SafeValue("bolideSimpleHeroButtonText"))</a>
                                        </div>
                                    </div>
                                    }
                                </div>
                            </div>
                            <div class="nodes">
                            @foreach(var frame in Model.SafeNestedValues("bolideSimpleHeroFrames").Where(f => f.SafeValue<bool>("bolideSimpleHeroEnabled")))
                            {
                                <a></a>
                            }
                                <span></span>
                            </div>
                        </div>
                        <script>

                            var slideCount = $("#@(heroId) .frame").length;
                            var slideTimer;
                            var countdownTimer;
                            var slideDuration = @(Model.SafeValue<int>("bolideSimpleHeroFrameDuration"));
                            var countdown = parseInt(slideDuration / 1000);
                            var transitionTime = @(Model.SafeValue<int>("bolideSimpleHeroTransitionTime"));

                            // Preload Images
                            var images = new Array();
                            $("#@(heroId) #hero-content .frame").each(function (index) {

                                images[index] = new Image();
                                images[index].src = $(this).attr("data-img");
                            });

                            $("#@(heroId) #hero-content .nodes > a").each(function (index) {

                                $(this).on("click", function () {

                                    nextSlide(index);
                                });
                            });

                            function nextSlide(index) {

                                var nodeIndex = index;
                                var nextSlideIndex = index + 1;

                                if (nextSlideIndex >= slideCount) {

                                    nextSlideIndex = 0;
                                }

                                if (slideCount > 1) {

                                    clearTimeout(slideTimer);

                                    countdown = parseInt(slideDuration / 1000);

                                    @if (Model.SafeValue<bool>("bolideSimpleHeroShowCountdown")) {

                                    <text>displayCountdown();</text>
                                    }

                                    clearTimeout(countdownTimer);
                                    countdownTimer = setInterval(function () {

                                        countdown--;

                                    @if (Model.SafeValue<bool>("bolideSimpleHeroShowCountdown")) {

                                        <text>displayCountdown();</text>
                                    }

                                    }, 1000);

                                    slideTimer = setTimeout(function () {

                                        nextSlide(nextSlideIndex);

                                    }, slideDuration);
                                }                                

                                $("#@(heroId) #hero-content .nodes > a").each(function (index) {

                                    if (index !== nodeIndex) {

                                        $(this).html("<i class='far fa-circle'></i>");

                                    } else {

                                        $(this).html("<i class='fas fa-circle'></i>");
                                    }
                                });

                                $("#@(heroId) #hero-content .frame").each(function (index) {

                                    var frame = this;

                                    if (index !== nodeIndex) {

                                        $(frame).removeClass("current");

                                    } else {

                                        $(frame).addClass("current");

                                        $("#@(heroId)").backstretch($(frame).attr("data-img"), {

                                            transitionDuration: transitionTime,
                                            transitionEasing: 'linear'
                                        });

                                        //$("#@(heroId)").css("background-image", "url('" + $(frame).attr("data-img") + "')");
                                    }
                                });
                            }

                            function displayCountdown() {

                                var text = "";

                                if (countdown > 0) {

                                    text = countdown;
                                }

                                $("#@(heroId) #hero-content .nodes > span").html(text);
                            }

                            nextSlide(0);

                            @if (Model.SafeValue<bool>("bolideSimpleHeroShowCountdown"))
                            {
                            <text>displayCountdown();</text>
                            }
                        </script>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
