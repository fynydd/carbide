@inherits Umbraco.Web.Mvc.UmbracoViewPage
@using System
@using System.Security.Cryptography
@using Umbraco.Web
@using Fynydd.Carbide

@{ 
    var umbCtx = DependencyResolver.Current.GetService<IUmbracoContextFactory>().EnsureUmbracoContext().UmbracoContext;

    object bolideSimpleHeroInstanceId;
    Html.ViewData.TryGetValue("BolideSimpleHeroInstanceId", out bolideSimpleHeroInstanceId);

    var heroId = bolideSimpleHeroInstanceId == null ? "hero-unit" : bolideSimpleHeroInstanceId.ToString();
    var uid = heroId.Replace("-", "").Replace("_", "");
}

<section id="@(heroId)" class="bolide_simple_hero" sf-unit>
    <div role="presentation" id="dimmer"></div>
    <div sf-outer-wrapper>
        <div sf-inner-wrapper>
            <div role="grid" style="--sf-centered: true;">
                <div role="gridcell" class="outer-gridcell">
                    <div id="hero-content">
                        <div role="presentation">
                            <div role="grid">
                                <div role="gridcell" class="inner-gridcell">
                                    @foreach(var frame in Model.SafeNestedValues("bolideSimpleHeroFrames").Where(f => f.SafeValue<bool>("bolideSimpleHeroEnabled")))
                                    {
                                    <div class="frame" data-img="@(frame.PickerValue("bolideSimpleHeroBackgroundImage").Url)?width=1920&quality=75" style="transition-duration: @(Model.SafeValue<float>("bolideSimpleHeroFrameTransitionTime")/1000)s;">
                                        <h1>@Html.Raw(frame.SafeValue("bolideSimpleHeroTitle"))</h1>
                                        <div class="excerpt-row">
                                            @Html.Raw(frame.SafeValue("bolideSimpleHeroExcerpt"))
                                        </div>
                                        @if(frame.HasValue("bolideSimpleHeroButtonText"))
                                        {
                                        <div class="button-row">
                                            <a href="@(frame.HasValue("bolideSimpleHeroButtonLink") ? frame.PickerValue("bolideSimpleHeroButtonLink").Url : frame.SafeValue<string>("bolideSimpleHeroButtonUrl"))" role="button">@Html.Raw(frame.SafeValue("bolideSimpleHeroButtonText"))</a>
                                        </div>
                                        }
                                    </div>
                                    }
                                </div>
                            </div>
                            <div class="nodes">
                            @foreach(var frame in Model.SafeNestedValues("bolideSimpleHeroFrames").Where(f => f.SafeValue<bool>("bolideSimpleHeroEnabled")))
                            {
                                <a></a>
                            }
                                <span></span>
                            </div>
                        </div>
                        <script>

                            $(document).ready(function() {

                                var @(uid)_slideCount = $("#@(heroId) .frame").length;
                                var @(uid)_slideTimer;
                                var @(uid)_countdownTimer;
                                var @(uid)_slideDuration = @(Model.SafeValue<int>("bolideSimpleHeroFrameDuration"));
                                var @(uid)_countdown = parseInt(@(uid)_slideDuration / 1000);
                                var @(uid)_transitionTime = @(Model.SafeValue<int>("bolideSimpleHeroBgTransitionTime"));

                                // Preload Images
                                var @(uid)_images = new Array();

                                if (!$.backstretch) {

                                    $.getScript("/scripts/jquery.backstretch.min.js", function (data, textStatus, jqxhr) {
                                        //console.log( data ); // Data returned
                                        console.log( textStatus ); // Success
                                        console.log( jqxhr.status ); // 200
                                        console.log("Load was performed.");

                                        if (jqxhr.status === 200) {

                                            @(uid)_initSimpleHero();
                                        }
                                    });

                                } else {

                                    @(uid)_initSimpleHero();
                                }

                                function @(uid)_initSimpleHero() {

                                    $("#@(heroId) #hero-content .frame").each(function (index) {

                                        @(uid)_images[index] = new Image();
                                        @(uid)_images[index].src = $(this).attr("data-img");
                                    });

                                    $("#@(heroId) #hero-content .nodes > a").each(function (index) {

                                        $(this).on("click", function () {

                                            @(uid)_nextSlide(index);
                                        });
                                    });

                                    @(uid)_nextSlide(0);

                                    @if (Model.SafeValue<bool>("bolideSimpleHeroShowCountdown"))
                                    {
                                        @(uid + "_displayCountdown();")
                                    }
                                }

                                function @(uid)_nextSlide(index) {

                                    var nodeIndex = index;
                                    var nextSlideIndex = index + 1;

                                    if (nextSlideIndex >= @(uid)_slideCount) {

                                        nextSlideIndex = 0;
                                    }

                                    if (@(uid)_slideCount > 1) {

                                        clearTimeout(@(uid)_slideTimer);

                                        @(uid)_countdown = parseInt(@(uid)_slideDuration / 1000);

                                        @if (Model.SafeValue<bool>("bolideSimpleHeroShowCountdown"))
                                        {
                                        @(uid + "_displayCountdown();")
                                        }

                                        clearTimeout(@(uid)_countdownTimer);
                                        @(uid)_countdownTimer = setInterval(function () {

                                            @(uid)_countdown--;

                                        @if (Model.SafeValue<bool>("bolideSimpleHeroShowCountdown"))
                                        {
                                        @(uid + "_displayCountdown();")
                                        }

                                        }, 1000);

                                        @(uid)_slideTimer = setTimeout(function () {

                                            @(uid)_nextSlide(nextSlideIndex);

                                        }, @(uid)_slideDuration);
                                    }                                

                                    $("#@(heroId) #hero-content .nodes > a").each(function (index) {

                                        if (index !== nodeIndex) {

                                            $(this).html("<i class='far fa-circle'></i>");

                                        } else {

                                            $(this).html("<i class='fas fa-circle'></i>");
                                        }
                                    });

                                    $("#@(heroId) #hero-content .frame").each(function (index) {

                                        var frame = this;

                                        if (index !== nodeIndex) {

                                            $(frame).removeClass("current");

                                        } else {

                                            $(frame).addClass("current");

                                            $("#@(heroId)").backstretch($(frame).attr("data-img"), {

                                                transitionDuration: @(uid)_transitionTime,
                                                transitionEasing: 'linear'
                                            });
                                        }
                                    });
                                }

                                function @(uid)_displayCountdown() {

                                    var text = "";

                                    if (@(uid)_countdown > 0) {

                                        text = @(uid)_countdown;
                                    }

                                    $("#@(heroId) #hero-content .nodes > span").html(text);
                                }
                            });

                        </script>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
