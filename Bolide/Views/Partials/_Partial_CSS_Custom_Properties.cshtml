@inherits Umbraco.Web.Mvc.UmbracoViewPage
@using System
@using System.Security.Cryptography
@using Umbraco.Web
@using Bolide.Helpers
@using Fynydd.Carbide

@{ 
    var umbCtx = DependencyResolver.Current.GetService<IUmbracoContextFactory>().EnsureUmbracoContext().UmbracoContext;

    object cssSelector;
    Html.ViewData.TryGetValue("cssSelector", out cssSelector);

    var selector = cssSelector == null ? "" : cssSelector.ToString();

    if (selector.HasValue())
    {
        var breakpoints = new string[] { "zero", "phab", "tabp", "tabl", "note", "desk", "elas" };

<style type="text/css">
        @foreach (var breakpoint in breakpoints)
        {
            var width = Settings.GetCssBreakpoint(breakpoint);

            if (width != "false")
            {
                if (Model.SafeValue(breakpoint + "CssProperties").HasValue())
                {
    <text>
    @@media (min-width: @(width)) {

        @Html.Raw(selector + ", " + selector + " > [sf-outer-wrapper], " + selector + " > [sf-outer-wrapper] > [sf-inner-wrapper]" ) {

            @(Model.SafeValue(breakpoint + "CssProperties"))
        }

        @if (Model.SafeValue(breakpoint + "CssProperties").Replace(" ", "").Contains("--content-align:center;"))
        {
            // EXCEPTION FOR MS EDGE
            <text>
            @Html.Raw(selector + " > [sf-outer-wrapper] > [sf-inner-wrapper] #hero-content, " + selector + " > [sf-outer-wrapper] > [sf-inner-wrapper] .unit-content") {

                text-align: center;
            }
            </text>
        }

        @if (Model.SafeValue(breakpoint + "CssProperties").Replace(" ", "").Contains("--content-align:right;"))
        {
            // EXCEPTION FOR MS EDGE
            <text>
            @Html.Raw(selector + " > [sf-outer-wrapper] > [sf-inner-wrapper] #hero-content, " + selector + " > [sf-outer-wrapper] > [sf-inner-wrapper] .unit-content") {

                text-align: right;
            }
            </text>
        }

        @if (Model.SafeValue(breakpoint + "CssProperties").Replace(" ", "").Contains("--headline-align:center;"))
        {
            // EXCEPTION FOR MS EDGE
            <text>
            @Html.Raw(selector + " > [sf-outer-wrapper] > [sf-inner-wrapper] h1, " + selector + " > [sf-outer-wrapper] > [sf-inner-wrapper] h2, " + selector + " > [sf-outer-wrapper] > [sf-inner-wrapper] h3, " + selector + " > [sf-outer-wrapper] > [sf-inner-wrapper] h4, " + selector + " > [sf-outer-wrapper] > [sf-inner-wrapper] h5, " + selector + " > [sf-outer-wrapper] > [sf-inner-wrapper] h6") {

                text-align: center;
            }
            </text>
        }

        @if (Model.SafeValue(breakpoint + "CssProperties").Replace(" ", "").Contains("--headline-align:right;"))
        {
            // EXCEPTION FOR MS EDGE
            <text>
            @Html.Raw(selector + " > [sf-outer-wrapper] > [sf-inner-wrapper] h1, " + selector + " > [sf-outer-wrapper] > [sf-inner-wrapper] h2, " + selector + " > [sf-outer-wrapper] > [sf-inner-wrapper] h3, " + selector + " > [sf-outer-wrapper] > [sf-inner-wrapper] h4, " + selector + " > [sf-outer-wrapper] > [sf-inner-wrapper] h5, " + selector + " > [sf-outer-wrapper] > [sf-inner-wrapper] h6") {

                text-align: right;
            }
            </text>
        }

        @if (Model.SafeValue(breakpoint + "CssProperties").Replace(" ", "").Contains("--button-align:center;"))
        {
            // EXCEPTION FOR MS EDGE
            <text>
            @Html.Raw(selector + " > [sf-outer-wrapper] > [sf-inner-wrapper] .button-row") {

                text-align: center;
            }
            </text>
        }

        @if (Model.SafeValue(breakpoint + "CssProperties").Replace(" ", "").Contains("--button-align:right;"))
        {
            // EXCEPTION FOR MS EDGE
            <text>
            @Html.Raw(selector + " > [sf-outer-wrapper] > [sf-inner-wrapper] .button-row") {

                text-align: right;
            }
            </text>
        }
    }
    </text>
                }
            }
        }
</style>
    }
}
