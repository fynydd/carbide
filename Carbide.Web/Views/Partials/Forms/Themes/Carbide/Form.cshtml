@inherits WebViewPage<Umbraco.Forms.Web.Models.FormViewModel>
@using Umbraco.Forms.Core.Enums
@using Umbraco.Forms.Mvc
@using Umbraco.Forms.Mvc.Models
@using Umbraco.Forms.Mvc.BusinessLogic
@using Fynydd.Carbide
<div class="umbraco-forms-page form-horizontal" role="form">

    @if (string.IsNullOrEmpty(Model.CurrentPage.Caption) == false)
    {
        <h4 class="umbraco-forms-caption">@Model.CurrentPage.Caption</h4>
    }
                
    @if (Model.ShowValidationSummary)
    {
        @Html.ValidationSummary(false)
    }

    @foreach (FieldsetViewModel fs in Model.CurrentPage.Fieldsets)
    {
        <fieldset class="umbraco-forms-fieldset" id="@fs.Id" sf-subunit>

            @if (string.IsNullOrEmpty(fs.Caption) == false)
            {
                <legend>@fs.Caption</legend>
            }

            <script>

                function setValidationWatcher(formId) {

                    $("body").on('DOMSubtreeModified', "#sf-validation-message-" + formId, function () {

                        console.log($("#sf-validation-message-" + formId).text());

                        if ($("#sf-validation-message-" + formId).text().length < 1) {

                            $("#sf-form-field-" + formId).removeAttr("sf-invalid");

                        } else {

                            $("#sf-form-field-" + formId).attr("sf-invalid", "true");
                        }
                    });
                }

            </script>

            <div role="grid" style="--sf-tabp-gutters: var(--column-gutter); --sf-row-gutters: var(--row-gutter);">

                @foreach (var c in fs.Containers)
                {
                    <div class="umbraco-forms-container" role="gridcell" style="--sf-tabp-frac: @(c.Width + "/12");">

                        @foreach (FieldViewModel f in c.Fields)
                        {
                            bool hidden = f.HasCondition && f.ConditionActionType == FieldConditionActionType.Show;

                            if (f.FieldType.FieldTypeViewName.Contains("FieldType.Textfield") || f.FieldType.FieldTypeViewName.Contains("FieldType.Textarea") || f.FieldType.FieldTypeViewName.Contains("FieldType.DatePicker") || f.FieldType.FieldTypeViewName.Contains("FieldType.FileUpload") || f.FieldType.FieldTypeViewName.Contains("FieldType.PasswordField") || f.FieldType.FieldTypeViewName.Contains("FieldType.RadioButtonList"))
                            {
                                var fieldTypeAttribute = "sf-textbox";

                                if (f.FieldType.FieldTypeViewName.Contains("FieldType.DatePicker"))
                                {
                                    fieldTypeAttribute = "sf-textbox sf-date";
                                }

                                else if (f.FieldType.FieldTypeViewName.Contains("FieldType.FileUpload"))
                                {
                                    fieldTypeAttribute = "sf-filebox";
                                }

                                else if (f.FieldType.FieldTypeViewName.Contains("FieldType.RadioButtonList"))
                                {
                                    fieldTypeAttribute = "sf-radiolist";
                                }

                            <div role="row">
                                <div id="sf-form-field-@(f.Id)" @(fieldTypeAttribute) @(Html.ValidationMessage(f.Id).ToString().Contains("></span>") ? "" : "sf-invalid") class="@Html.GetFormFieldWrapperClass(f.FieldTypeName)  @f.CssClass" @{ if (hidden) { <text> style="display: none" </text>  } }>

                                    @if (!f.HideLabel)
                                    {
                                        <label for="@f.Id" class="control-label umbraco-forms-label" sf-label>
                                            @f.Caption 
                                            @if (f.ShowIndicator)
                                            {
                                                <span class="umbracoForms-Indicator">@Model.Indicator</span>
                                            }
                                            @if (!string.IsNullOrEmpty(f.ToolTip))
                                            {
                                                <small class="help-block">@f.ToolTip</small>
                                            }
                                        </label>
                                    }

                                    <span class="umbraco-forms-field-wrapper" sf-wrapper>
                                        @Html.Partial(FormThemeResolver.GetFieldView(Model, f), f)
                                    </span>

                                    @if (Model.ShowFieldValidaton)
                                    {
                                        <span id="sf-validation-message-@(f.Id)" sf-validation-message>@Html.ValidationMessage(f.Id)</span>
                                    }

                                </div>
                                <script>
                                    setValidationWatcher('@(f.Id)');
                                </script>
                            </div>
                            }

                            else if (f.FieldType.FieldTypeViewName.Contains("FieldType.DataConsent"))
                            {
                            <div role="row">
                                <label sf-label>
                                    @f.Caption 
                                    @if (f.ShowIndicator)
                                    {
                                        <span class="umbracoForms-Indicator">@Model.Indicator</span>
                                    }
                                    @if (!string.IsNullOrEmpty(f.ToolTip))
                                    {
                                        <small class="help-block">@f.ToolTip</small>
                                    }
                                </label>
                                <div sf-checkbox class="@Html.GetFormFieldWrapperClass(f.FieldTypeName)  @f.CssClass" @{ if (hidden) { <text> style="display: none" </text>  } }>

                                    @if (!f.HideLabel)
                                    {
                                        var acceptCopy = string.Empty;
                                        f.AdditionalSettings.TryGetValue("AcceptCopy", out acceptCopy);

                                        <label for="@f.Id" class="control-label umbraco-forms-label">
                                            <span class="umbraco-forms-field-wrapper" sf-wrapper>
                                                @Html.Partial(FormThemeResolver.GetFieldView(Model, f), f)
                                            </span>
                                            <span>
                                                @acceptCopy
                                            </span>
                                        </label>
                                    }
                                </div>
                                <script>
                                    setValidationWatcher('@(f.Id)');
                                </script>
                            </div>
                            }

                            else if (f.FieldType.FieldTypeViewName.Contains("FieldType.CheckboxList"))
                            {
                            <div role="row">
                                <label sf-label>
                                    @f.Caption 
                                    @if (f.ShowIndicator)
                                    {
                                        <span class="umbracoForms-Indicator">@Model.Indicator</span>
                                    }
                                    @if (!string.IsNullOrEmpty(f.ToolTip))
                                    {
                                        <small class="help-block">@f.ToolTip</small>
                                    }
                                </label>
                                <span class="umbraco-forms-field-wrapper" sf-wrapper>
                                    @Html.Partial(FormThemeResolver.GetFieldView(Model, f), f)
                                </span>
                            </div>
                            }

                            else if (f.FieldType.FieldTypeViewName.Contains("FieldType.Checkbox"))
                            {
                            <div role="row">
                                <label sf-label>
                                    @f.Caption 
                                    @if (f.ShowIndicator)
                                    {
                                        <span class="umbracoForms-Indicator">@Model.Indicator</span>
                                    }
                                    @if (!string.IsNullOrEmpty(f.ToolTip))
                                    {
                                        <small class="help-block">@f.ToolTip</small>
                                    }
                                </label>
                                <div class="@Html.GetFormFieldWrapperClass(f.FieldTypeName)  @f.CssClass" @{ if (hidden) { <text> style="display: none" </text>  } }>
                                    @Html.Partial(FormThemeResolver.GetFieldView(Model, f), f)
                                </div>
                            </div>
                            }

                            else if (f.FieldType.FieldTypeViewName.Contains("FieldType.Text"))
                            {
                            <div class="separator" role="row">
                                @Html.Partial(FormThemeResolver.GetFieldView(Model, f), f)
                            </div>
                            }

                            else if (f.FieldType.FieldTypeViewName.Contains("FieldType.HiddenField"))
                            {
                                @Html.Partial(FormThemeResolver.GetFieldView(Model, f), f)
                            }
                        }

                    </div>

                }

                <div style="display: none">
                    <input type="text" name="@Model.FormId.ToString().Replace("-", "")" />
                </div>
            </div>

        </fieldset>
    }

    <div class="umbraco-forms-navigation" sf-subunit>
		
        @if (Model.IsMultiPage)
        {
            if (!Model.IsFirstPage)
            {
                <input class="btn prev cancel" type="submit" value="@Model.PreviousCaption" name="__prev"/>
            }
            if (!Model.IsLastPage)
            {
                <input type="submit" class="btn next" value="@Model.NextCaption" name="next"/>
            }
            if (Model.IsLastPage)
            {
                <input type="submit" class="btn primary" value="@Model.SubmitCaption" name="submitbtn"/>
            }
        }
        else
        {
            <input type="submit" class="btn btn-primary" value="@Model.SubmitCaption" name="submitbtn"/>
        }

    </div>

</div>

@Html.Partial("Forms/Themes/default/ScrollToFormScript")